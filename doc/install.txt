Do whatever sections apply.

Git
  ## first, set up account on github (and get permissions from Abram)
  sudo apt-get install git
    git config --global user.name "xxx"
    git config --global user.email "xxx@gmail.com"
    git config --global credential.helper cache
    git config --global credential.helper 'cache --timeout=3600'
    # git clone https://github.com/hivedev/newhive.git
    git clone -b v2-community https://github.com/hivedev/newhive.git # [new-directory]

Python library dependency dependencies (Ubuntu packages)
    sudo apt-get install python-pip gfortran libblas-dev liblapack-dev python-dev g++
    sudo apt-get install build-essential python-dev ipython

Python library dependencies
    sudo pip install ez_setup
    pip install PIL --allow-external PIL --allow-unverified PIL
    sudo pip install werkzeug pymongo boto oauth2 oauth2client paramiko cssutils hsaudiotag lxml webassets urllib3 apiclient httplib2 pytz jinja2 simplejson yuicompressor envoy scipy webkit2png pandas brownie google-api-python-client  statprof yappi beautifulsoup4

JavaScript dependencies
    sudo apt-get install npm

    node:
        wget http://nodejs.org/dist/v0.10.12/node-v0.10.12.tar.gz
        tar zxf node-v0.10.12.tar.gz
        cd node-v0.10.12
        chmod -R o+rX .
        make
        sudo make install
    cram:
        sudo npm install -g bower@0.9.2nm
        sudo npm install -g cram@0.7.6

Application dependencies (Ubuntu packages)
    sudo apt-get install mongodb ruby-sass ruby-compass cutycapt libicu48 imagemagick

To make Cutycapt:
    sudo apt-get install subversion libqt4-webkit libqt4-dev g++ xvfb
    svn co svn://svn.code.sf.net/p/cutycapt/code/ cutycapt
    cd cutycapt/CutyCapt
    make clean;qmake;make
    xvfb-run ./CutyCapt --url=http://www.example.org --out=example.png

Get the db
    scp dev.newhive.com:/tmp/2014* .
    tar -xvf 2014*
    mongorestore --drop -d test --dir tmp/live-newhive

Set up and run the server
    cd ~/newhive
    echo 'from local import *' > newhive/config/config.py 
    sudo sh -c 'echo 127.0.0.1 site content >> /etc/hosts'
    ./server.py
    
    
Ok, far easier to clone the working instance, staging.
From AWS console, EC2 -> instances
Right-click staging -> create image
  Save as staging - version x.x

Now create instances using that image.
Right-click staging -> launch more like this
  Make sure you select the new image you created, and fill in the data for a live server

On AWS console, Route 53, {newhive.com, tnh.me} add new entry for new server (copy the format from the others, and get the DNS from EC2 Managment Console)

On your new instance,
  cd /var/www/newhive
  vim newhive/config/config.py
     change the dev prefix and make sure you can access it with a browser (navigate to <new server dns>.newhive.com)
     hive_server_deploy
     Everything worked out?
       now comment out dev prefix
       update the loadbalancer to point at the new server(s)

