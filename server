#! /usr/bin/python
import os, optparse
from os.path  import dirname, exists, join as joinpath
import newhive.config as config
from newhive.wsgi import handle_debug

# run_simple is not so simple
if __name__ == '__main__':
    parser = optparse.OptionParser()
    parser.add_option("-p", "--port", action="store", type="int", dest="port")
    parser.add_option("--secure-port", action="store", type="int", dest="secure_port")
    (options, args) = parser.parse_args()

    config.plain_port =  options.port or config.plain_port
    config.secure_port = options.secure_port or options.port + 1 or config.ssl_port


    """ This Werkzeug server is used only for development and debugging """
    from werkzeug import run_simple
    import OpenSSL.SSL as ssl

    ctx = ssl.Context(ssl.SSLv3_METHOD)
    ctx.use_privatekey_file(config.ssl_key)
    ctx.use_certificate_file(config.ssl_cert)
    application = handle_debug
    if config.ssl_ca: ctx.use_certificate_chain_file(config.ssl_ca)

    child = os.fork()
    if(child):
        run_simple(
            '0.0.0.0'
          , config.plain_port
          , application
          , use_reloader = True
          , use_debugger = config.debug_mode
          , use_evalex = config.debug_unsecure # from werkzeug.debug import DebuggedApplication
          , static_files = {
               '/lib' : joinpath(config.src_home, 'lib')
              ,'/images' : joinpath(config.src_home, 'libsrc/scss/images')
              ,'/file' : config.media_path
            }
          , processes = 0
          )
    else:
        run_simple(
            '0.0.0.0'
          , config.ssl_port
          , application
          , use_reloader = True
          , use_debugger = config.debug_mode
          , use_evalex = config.debug_unsecure # from werkzeug.debug import DebuggedApplication
          , static_files = {
               '/lib' : joinpath(config.src_home, 'lib')
              ,'/file' : config.media_path
            }
          , ssl_context  = ctx
          , processes = 0
          )
